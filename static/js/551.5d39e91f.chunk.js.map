{"version":3,"file":"static/js/551.5d39e91f.chunk.js","mappings":"mMAEaA,E,QAAyBC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qzD,sCCyEhD,EArEyB,SAAHC,GAAwB,IAAlBC,EAAUD,EAAVC,WACpBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAkBjB,OACEC,EAAAA,EAAAA,KAACV,EAAsB,CAAAW,UACrBC,EAAAA,EAAAA,MAAA,QAAMC,SAbY,SAAAC,GACpBA,EAAIC,iBACJ,IAAMC,EAAU,CACdC,KAAMH,EAAII,cAAcD,KAAKE,MAC7BC,MAAON,EAAII,cAAcE,MAAMD,MAC/BE,SAAUP,EAAII,cAAcG,SAASF,OAEvCd,EAAWW,GACXF,EAAII,cAAcI,OACpB,EAIkCX,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,gBACUD,EAAAA,EAAAA,KAAA,QAAAC,SAAM,UAEpBC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,QAAAC,SAAM,WACND,EAAAA,EAAAA,KAAA,SACEa,KAAK,OACLN,KAAK,OACLO,QAAQ,2HACRC,WAAS,EACTC,UAAU,IACVC,UAAU,OACVC,UAAQ,QAGZhB,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,QAAAC,SAAM,YACND,EAAAA,EAAAA,KAAA,SAAOa,KAAK,QAAQN,KAAK,QAAQU,UAAU,QAAQC,UAAQ,QAE7DhB,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,QAAAC,SAAM,eACND,EAAAA,EAAAA,KAAA,SACEa,KAAK,WACLN,KAAK,WACLS,UAAU,IACVG,UAAU,KACVD,UAAQ,QAGZlB,EAAAA,EAAAA,KAAA,UAAQa,KAAK,SAAQZ,SAAC,aACtBC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CACoE,2BACzC,KACzBD,EAAAA,EAAAA,KAAA,UAAQa,KAAK,SAASI,UAAU,OAAOG,QApD1B,WACnBxB,GAASyB,EAAAA,EAAAA,MACTvB,EAAS,SACX,EAiDqEG,SAAC,mBAOxE,E,uCCvCA,EAvBiB,WACf,IAAML,GAAWC,EAAAA,EAAAA,MACXyB,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,KAE1BC,EAAAA,EAAAA,YAAU,WACJH,IACa,eAAfA,EAAMf,KACFmB,EAAAA,GAAAA,KAAW,+BACXA,EAAAA,GAAAA,KAAW,oBAEnB,GAAG,CAACJ,IAMJ,OACEtB,EAAAA,EAAAA,KAAA,QAAAC,UACED,EAAAA,EAAAA,KAAC2B,EAAgB,CAAChC,WANH,SAAAiC,GACjBhC,GAASiC,EAAAA,EAAAA,IAAcD,GACzB,KAOF,C","sources":["components/RegistrationForm/RegistrationForm.styled.js","components/RegistrationForm/RegistrationForm.js","pages/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledRegistrationForm = styled.div`\n  display: inline-block;\n  width: 100vw;\n\n  form {\n    width: 600px;\n    height: 500px;\n    margin: 100px auto;\n    padding: 50px;\n    background-color: #fff;\n    border-radius: 10px;\n    box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px,\n      rgba(0, 0, 0, 0.23) 0px 6px 6px;\n  }\n\n  h2 {\n    font-size: 40px;\n    margin-bottom: 30px;\n    font-family: 'REM';\n  }\n\n  h2 span {\n    color: #fff500;\n  }\n\n  label {\n    width: 350px;\n    height: 25px;\n    display: flex;\n    gap: 20px;\n    margin-bottom: 20px;\n  }\n\n  span {\n    margin-top: 2px;\n  }\n\n  input {\n    width: 100%;\n    padding: 0 5px;\n    border: none;\n    border-bottom: 2px dotted #bbbbbb;\n    font-size: 15px;\n    outline: none;\n    color: black;\n    letter-spacing: 0.1em;\n    font-family: 'IBM Plex Mono';\n    background-color: white !important;\n    color: gray;\n  }\n\n  input.name,\n  input.email {\n    padding-left: 30px;\n  }\n\n  input:valid {\n    color: black;\n  }\n\n  button {\n    display: inline-block;\n    width: 160px;\n    margin: 48px 0 68px 190px;\n    padding: 11px;\n    border: none;\n    border-radius: 20px;\n    font-size: 16px;\n    font-weight: 800;\n    letter-spacing: 0.1em;\n    background-color: #fff500;\n    transition: box-shadow 250ms ease;\n  }\n\n  button:hover {\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 6px -1px,\n      rgba(0, 0, 0, 0.06) 0px 2px 4px -1px;\n  }\n\n  p {\n    text-align: right;\n    font-size: 14px;\n  }\n\n  button.link {\n    display: inline;\n    background-color: transparent;\n    margin: 0;\n    padding: 0 !important;\n    color: black;\n    padding: 3px;\n    font-weight: bolder;\n    font-size: 14px;\n    font-family: sans-serif;\n    width: 50px;\n    border-radius: 0;\n    letter-spacing: 0;\n  }\n\n  button.link:hover {\n    box-shadow: none;\n  }\n`;\n","import { StyledRegistrationForm } from './RegistrationForm.styled';\nimport PropTypes from 'prop-types';\nimport { setError } from 'redux/rootSlice';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nconst RegistrationForm = ({ onRegister }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handlerClick = () => {\n    dispatch(setError());\n    navigate('/login');\n  };\n\n  const handlerSubmit = evt => {\n    evt.preventDefault();\n    const newUser = {\n      name: evt.currentTarget.name.value,\n      email: evt.currentTarget.email.value,\n      password: evt.currentTarget.password.value,\n    };\n    onRegister(newUser);\n    evt.currentTarget.reset();\n  };\n\n  return (\n    <StyledRegistrationForm>\n      <form onSubmit={handlerSubmit}>\n        <h2>\n          Registration<span>.</span>\n        </h2>\n        <label>\n          <span>Name </span>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            autoFocus\n            minLength=\"2\"\n            className=\"name\"\n            required\n          />\n        </label>\n        <label>\n          <span>Email </span>\n          <input type=\"email\" name=\"email\" className=\"email\" required />\n        </label>\n        <label>\n          <span>Password </span>\n          <input\n            type=\"password\"\n            name=\"password\"\n            minLength=\"6\"\n            maxLength=\"12\"\n            required\n          />\n        </label>\n        <button type=\"Submit\">SIGN UP</button>\n        <p>\n          {/* Already have an account? <Link to=\"/login\"> Sign in</Link> */}\n          Already have an account?{' '}\n          <button type=\"button\" className=\"link\" onClick={handlerClick}>\n            Sign in\n          </button>\n        </p>\n      </form>\n    </StyledRegistrationForm>\n  );\n};\n\nRegistrationForm.propTypes = {\n  onRegister: PropTypes.func.isRequired,\n};\n\nexport default RegistrationForm;\n","import RegistrationForm from 'components/RegistrationForm/RegistrationForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { registerThunk } from 'redux/user/userThunks';\nimport { toast } from 'react-toastify';\nimport { selectError } from 'redux/selectors';\nimport { useEffect } from 'react';\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    if (error) {\n      error.name === 'MongoError'\n        ? toast.info('This account already exists')\n        : toast.info('Wrong login data');\n    }\n  }, [error]);\n\n  const onRegister = newUserData => {\n    dispatch(registerThunk(newUserData));\n  };\n\n  return (\n    <main>\n      <RegistrationForm onRegister={onRegister} />\n    </main>\n  );\n};\n\nexport default Register;\n"],"names":["StyledRegistrationForm","styled","_templateObject","_taggedTemplateLiteral","_ref","onRegister","dispatch","useDispatch","navigate","useNavigate","_jsx","children","_jsxs","onSubmit","evt","preventDefault","newUser","name","currentTarget","value","email","password","reset","type","pattern","autoFocus","minLength","className","required","maxLength","onClick","setError","error","useSelector","selectError","useEffect","toast","RegistrationForm","newUserData","registerThunk"],"sourceRoot":""}