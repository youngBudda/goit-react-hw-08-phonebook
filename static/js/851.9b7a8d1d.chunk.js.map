{"version":3,"file":"static/js/851.9b7a8d1d.chunk.js","mappings":"oQAGaA,EAAkBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,61EAuCbC,G,sCCoB5B,EAxDkB,SAAHC,GAAqB,IAAfC,EAAOD,EAAPC,QACbC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAiBjB,OACEC,EAAAA,EAAAA,KAACX,EAAe,CAAAY,UACdC,EAAAA,EAAAA,MAAA,QAAMC,SAZY,SAAAC,GACpBA,EAAIC,iBACJ,IAAMC,EAAW,CACfC,MAAOH,EAAII,cAAcD,MAAME,MAC/BC,SAAUN,EAAII,cAAcE,SAASD,OAEvCd,EAAQW,GACRF,EAAII,cAAcG,OACpB,EAIkCV,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,SACGD,EAAAA,EAAAA,KAAA,QAAAC,SAAM,UAEbC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,QAAAC,SAAM,YACND,EAAAA,EAAAA,KAAA,SAAOY,KAAK,QAAQC,KAAK,QAAQC,UAAQ,QAE3CZ,EAAAA,EAAAA,MAAA,SAAOa,UAAU,WAAUd,SAAA,EACzBD,EAAAA,EAAAA,KAAA,QAAAC,SAAM,eACND,EAAAA,EAAAA,KAAA,SACEY,KAAK,WACLC,KAAK,WACLG,UAAU,IACVC,UAAU,KACVH,UAAQ,QAGZZ,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CACoE,yBAC3C,KACvBD,EAAAA,EAAAA,KAAA,UAAQY,KAAK,SAASG,UAAU,OAAOG,QAtC1B,WACnBtB,GAASuB,EAAAA,EAAAA,MACTrB,EAAS,YACX,EAmCqEG,SAAC,gBAIhED,EAAAA,EAAAA,KAAA,UAAQY,KAAK,SAAQX,SAAC,eAI9B,E,uCCzBA,EAvBc,WACZ,IAAML,GAAWC,EAAAA,EAAAA,MACXuB,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,KAE1BC,EAAAA,EAAAA,YAAU,WACJH,IACa,eAAfA,EAAMP,KACFW,EAAAA,GAAAA,KAAW,+BACXA,EAAAA,GAAAA,KAAW,oBAEnB,GAAG,CAACJ,IAMJ,OACEpB,EAAAA,EAAAA,KAAA,QAAAC,UACED,EAAAA,EAAAA,KAACyB,EAAS,CAAC9B,QANC,SAAAW,GACdV,GAAS8B,EAAAA,EAAAA,IAAWpB,GACtB,KAOF,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport user from '../../images/userIcon.png';\n\nexport const StyledLoginForm = styled.div`\n  display: inline-block;\n  width: 100vw;\n\n  form {\n    width: 600px;\n    height: 500px;\n    margin: 100px auto;\n    padding: 50px;\n    position: relative;\n    background-color: #fff;\n    border-radius: 10px;\n    box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px,\n      rgba(0, 0, 0, 0.23) 0px 6px 6px;\n    position: relative;\n  }\n\n  h2 {\n    font-size: 40px;\n    margin-bottom: 30px;\n    font-family: 'REM';\n    margin: 0 auto 60px;\n    display: block;\n    width: 107px;\n  }\n\n  h2::after {\n    content: '';\n    width: 25px;\n    height: 13px;\n    position: absolute;\n    top: 90px;\n    left: 45%;\n    background-size: 25px 13px;\n    background-repeat: no-repeat;\n    background-position: center;\n    color: transparent;\n    display: inline-block;\n    animation: flipInYVisible 1500ms ease both;\n    background-image: url(${user});\n  }\n\n  h2 span {\n    color: #fff500;\n  }\n\n  /* img {\n    width: 25px;\n    height: 13px;\n    position: absolute;\n    top: 90px;\n    left: 45%;\n    animation: flipInYVisible 1500ms ease both;\n  } */\n\n  label {\n    width: 313px;\n    height: 25px;\n    margin: 0 120px 13px auto;\n    display: block;\n  }\n\n  label.password {\n    width: 344px;\n    margin: 0 120px 30px auto;\n  }\n\n  span {\n    margin: 2px 20px 0 0;\n  }\n\n  input {\n    width: 250px;\n    padding: 3px 10px;\n    border: 1px solid #bbbbbb;\n    font-size: 13px;\n    outline: none;\n    color: #737373;\n    border-radius: 5px;\n  }\n\n  input:valid {\n    color: black;\n  }\n\n  button {\n    margin: 0 auto;\n    display: block;\n    width: 160px;\n    padding: 11px;\n    border: none;\n    border-radius: 20px;\n    font-size: 16px;\n    font-weight: 800;\n    letter-spacing: 0.1em;\n    background-color: #fff500;\n    transition: box-shadow 250ms ease;\n  }\n\n  button:hover {\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 6px -1px,\n      rgba(0, 0, 0, 0.06) 0px 2px 4px -1px;\n  }\n\n  p {\n    text-align: center;\n    font-size: 14px;\n    margin-bottom: 20px;\n  }\n\n  button.link {\n    display: inline;\n    background-color: transparent;\n    margin: 0;\n    padding: 0 !important;\n    color: black;\n    padding: 3px;\n    font-weight: bolder;\n    font-size: 14px;\n    font-family: sans-serif;\n    width: 55px;\n    border-radius: 0;\n    letter-spacing: 0;\n  }\n\n  button.link:hover {\n    box-shadow: none;\n  }\n`;\n","import { StyledLoginForm } from './LoginForm.styled';\nimport PropTypes from 'prop-types';\nimport { setError } from 'redux/rootSlice';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nconst LoginForm = ({ onLogin }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handlerClick = () => {\n    dispatch(setError());\n    navigate('/register');\n  };\n\n  const handlerSubmit = evt => {\n    evt.preventDefault();\n    const userData = {\n      email: evt.currentTarget.email.value,\n      password: evt.currentTarget.password.value,\n    };\n    onLogin(userData);\n    evt.currentTarget.reset();\n  };\n\n  return (\n    <StyledLoginForm>\n      <form onSubmit={handlerSubmit}>\n        <h2>\n          Login<span>.</span>\n        </h2>\n        <label>\n          <span>Email </span>\n          <input type=\"email\" name=\"email\" required />\n        </label>\n        <label className=\"password\">\n          <span>Password </span>\n          <input\n            type=\"password\"\n            name=\"password\"\n            minLength=\"6\"\n            maxLength=\"12\"\n            required\n          />\n        </label>\n        <p>\n          {/* Don't have an account? <Link to=\"/register\">Sign up</Link> */}\n          Don't have an account?{' '}\n          <button type=\"button\" className=\"link\" onClick={handlerClick}>\n            Sign up\n          </button>\n        </p>\n        <button type=\"Submit\">LOG IN</button>\n      </form>\n    </StyledLoginForm>\n  );\n};\n\nLoginForm.propTypes = {\n  onLogin: PropTypes.func.isRequired,\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm/LoginForm';\nimport { useDispatch } from 'react-redux';\nimport { loginThunk } from 'redux/user/userThunks';\nimport { toast } from 'react-toastify';\nimport { selectError } from 'redux/selectors';\nimport { useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    if (error) {\n      error.name === 'MongoError'\n        ? toast.info('This account already exists')\n        : toast.info('Wrong login data');\n    }\n  }, [error]);\n\n  const onLogin = userData => {\n    dispatch(loginThunk(userData));\n  };\n\n  return (\n    <main>\n      <LoginForm onLogin={onLogin} />\n    </main>\n  );\n};\n\nexport default Login;\n"],"names":["StyledLoginForm","styled","_templateObject","_taggedTemplateLiteral","user","_ref","onLogin","dispatch","useDispatch","navigate","useNavigate","_jsx","children","_jsxs","onSubmit","evt","preventDefault","userData","email","currentTarget","value","password","reset","type","name","required","className","minLength","maxLength","onClick","setError","error","useSelector","selectError","useEffect","toast","LoginForm","loginThunk"],"sourceRoot":""}